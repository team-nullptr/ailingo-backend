package openai

// Message represents a chat message
type Message struct {
	Content string `json:"content"`
	Role    string `json:"role"`
}

type Usage struct {
	TotalTokens int `json:"total_tokens"`
}

// CompletionChat represents completion chat settings.
type CompletionChat struct {
	Model     string    `json:"model"`
	Messages  []Message `json:"messages"`
	MaxTokens uint      `json:"max_tokens"`
}

// Choice represents a single choice generated by completion.
type Choice struct {
	Index        int     `json:"index"`
	Message      Message `json:"message"`
	FinishReason string  `json:"finish_reason"`
}

// Completion represents a response body returned by chat completion.
type Completion struct {
	Id      string   `json:"id"`
	Choices []Choice `json:"choices"`
	Usage   Usage    `json:"usage"`
}

// moderationRequest represents a payload provided to openai moderation API.
type moderationRequest struct {
	Input string `json:"input"`
}

// moderationResult represents a body returned by openai moderation API.
type moderationResult struct {
	Results []struct {
		Flagged        bool               `json:"flagged"`
		Categories     map[string]bool    `json:"categories"`
		CategoryScores map[string]float32 `json:"category_scores"`
	} `json:"results"`
}
